APPNAME			:= glfw
DESTDIR			?= .


# Make command to use for dependencies
CC = $(CROSS_COMPILE)gcc
AR = $(CROSS_COMPILE)ar

TARGET_PATH_LIB = /usr/lib/arm-linux-gnueabihf/vivante
TARGET_PATH_INCLUDE = /usr/include/vivante
COMMON_DIR=./common

BIN_TUT = $(DESTDIR)/$(APPNAME)

CFLAGS = -DDEBUG -D_DEBUG -D_GNU_SOURCE  -mfpu=neon -fPIC -O3 -fno-strict-aliasing -fno-optimize-sibling-calls -Wall -g -I/usr/include/vivante -L/usr/lib/arm-linux-gnueabihf/vivante `pkg-config --cflags --libs gstreamer-1.0` `pkg-config --cflags glfw3` `pkg-config --static --libs glfw3`

CFLAGS_TUT = $(CFLAGS) $(CFLAGS_EGL)

CFLAGS_TUT += \
    -DLINUX \
	-DEGL_USE_X11

CFLAGS_TUT += \
	-I$(TARGET_PATH_INCLUDE) \
	-I$(COMMON_DIR)/inc \
	

OBJECTS_TUT += \
	glfw.o \
	$(COMMON_DIR)/src/fsl_egl.o \
	$(COMMON_DIR)/src/fslutil.o

DEPS_TUT = -lstdc++ -lm -lGLESv2 -lEGL -lglfw3 -lX11 -ldl -Wl,--library-path=$(TARGET_PATH_LIB),-rpath-link=$(TARGET_PATH_LIB) -I/usr/include/vivante -I/usr/include/libdrm -L/usr/lib/arm-linux-gnueabihf/vivante `pkg-config --cflags --libs gstreamer-1.0` `pkg-config --cflags glfw3` `pkg-config --static --libs glfw3`

$(BIN_TUT) : $(OBJECTS_TUT)
	@echo " LD " $@
	$(QUIET)$(CC) -o $(BIN_TUT) $(OBJECTS_TUT) $(DEPS_TUT)

%.o : %.c
	@echo " CC " $@
	$(QUIET)$(CC) $(CFLAGS_TUT) -MMD -c $< -o $@

%.o : %.cpp
	@echo " CXX " $@
	$(QUIET)$(CC) $(CFLAGS_TUT) -MMD -c $< -o $@

clean:
	rm -f $(OBJECTS_TUT) $(OBJECTS_TUT:.o=.d) $(BIN_TUT)
	
install:
	cp -f $(APPNAME) $(DESTDIR)/.
	
	
-include $(OBJECTS_TUT:.o=.d)
